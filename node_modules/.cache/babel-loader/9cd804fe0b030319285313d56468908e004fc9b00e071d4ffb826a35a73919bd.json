{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alfon\\\\OneDrive\\\\Documentos\\\\GitHub\\\\frontend\\\\src\\\\pages\\\\pgrs\\\\pqrs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './pqrs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pqrs = () => {\n  _s();\n  const [pqrsData, setPqrsData] = useState({\n    tipo: '',\n    nombres_completos: '',\n    correo: '',\n    descripcion: '',\n    created_at: '' // Nombre del campo corregido\n  });\n  const [showAlert, setShowAlert] = useState(false); // Nuevo estado para controlar si se muestra el alerta\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPqrsData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const isFormValid = () => {\n    return Object.values(pqrsData).every(value => value !== '') && /\\S+@\\S+\\.\\S+/.test(pqrsData.correo) // Validación de correo electrónico\n    ;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!isFormValid()) {\n      setShowAlert(true); // Mostrar el alerta\n      return;\n    }\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/app1/pqr/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(pqrsData)\n      });\n      if (response.ok) {\n        alert('Datos del formulario enviados correctamente');\n        // Lógica adicional después de enviar los datos...\n        window.location.href = 'http://localhost:3000/'; // Redireccionar al usuario\n      } else {\n        alert('Error al enviar los datos del formulario');\n      }\n    } catch (error) {\n      alert('Hubo un error al enviar el formulario. Por favor, inténtelo de nuevo más tarde.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [showAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert\",\n      role: \"alert\",\n      children: \"Por favor, llene todos los campos correctamente antes de enviar el PQRS.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Formulario de PQRS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(Pqrs, \"9hRlmRCOb3vvxsQDBR9o3QJI5Ag=\");\n_c = Pqrs;\nexport default Pqrs;\nvar _c;\n$RefreshReg$(_c, \"Pqrs\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Pqrs","_s","pqrsData","setPqrsData","tipo","nombres_completos","correo","descripcion","created_at","showAlert","setShowAlert","handleChange","e","name","value","target","prevState","isFormValid","Object","values","every","test","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","alert","window","location","href","error","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/alfon/OneDrive/Documentos/GitHub/frontend/src/pages/pgrs/pqrs.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './pqrs.css';\r\n\r\nconst Pqrs = () => {\r\n    const [pqrsData, setPqrsData] = useState({\r\n        tipo: '',\r\n        nombres_completos: '',\r\n        correo: '',\r\n        descripcion: '',\r\n        created_at: '' // Nombre del campo corregido\r\n    });\r\n\r\n    const [showAlert, setShowAlert] = useState(false); // Nuevo estado para controlar si se muestra el alerta\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setPqrsData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const isFormValid = () => {\r\n        return (\r\n            Object.values(pqrsData).every(value => value !== '') &&\r\n            /\\S+@\\S+\\.\\S+/.test(pqrsData.correo) // Validación de correo electrónico\r\n        );\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!isFormValid()) {\r\n            setShowAlert(true); // Mostrar el alerta\r\n            return;\r\n        }\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/api/app1/pqr/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(pqrsData)\r\n            });\r\n            if (response.ok) {\r\n                alert('Datos del formulario enviados correctamente');\r\n                // Lógica adicional después de enviar los datos...\r\n                window.location.href = 'http://localhost:3000/'; // Redireccionar al usuario\r\n            } else {\r\n                alert('Error al enviar los datos del formulario');\r\n            }\r\n        } catch (error) {\r\n            alert('Hubo un error al enviar el formulario. Por favor, inténtelo de nuevo más tarde.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {showAlert && (\r\n                <div className=\"alert\" role=\"alert\">\r\n                    Por favor, llene todos los campos correctamente antes de enviar el PQRS.\r\n                </div>\r\n            )}\r\n            <form onSubmit={handleSubmit} className=\"form\">\r\n                <fieldset>\r\n                    <legend>Formulario de PQRS</legend>\r\n                    {/* Resto de tu formulario aquí */}\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pqrs;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACrCO,IAAI,EAAE,EAAE;IACRC,iBAAiB,EAAE,EAAE;IACrBC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,EAAE;IACfC,UAAU,EAAE,EAAE,CAAC;EACnB,CAAC,CAAC;EAEF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnD,MAAMc,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCZ,WAAW,CAACa,SAAS,KAAK;MACtB,GAAGA,SAAS;MACZ,CAACH,IAAI,GAAGC;IACZ,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACtB,OACIC,MAAM,CAACC,MAAM,CAACjB,QAAQ,CAAC,CAACkB,KAAK,CAACN,KAAK,IAAIA,KAAK,KAAK,EAAE,CAAC,IACpD,cAAc,CAACO,IAAI,CAACnB,QAAQ,CAACI,MAAM,CAAC,CAAC;IAAA;EAE7C,CAAC;EAED,MAAMgB,YAAY,GAAG,MAAOV,CAAC,IAAK;IAC9BA,CAAC,CAACW,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,WAAW,CAAC,CAAC,EAAE;MAChBP,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;MACpB;IACJ;IACA,IAAI;MACA,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC5B,QAAQ;MACjC,CAAC,CAAC;MACF,IAAIsB,QAAQ,CAACO,EAAE,EAAE;QACbC,KAAK,CAAC,6CAA6C,CAAC;QACpD;QACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,wBAAwB,CAAC,CAAC;MACrD,CAAC,MAAM;QACHH,KAAK,CAAC,0CAA0C,CAAC;MACrD;IACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZJ,KAAK,CAAC,iFAAiF,CAAC;IAC5F;EACJ,CAAC;EAED,oBACIjC,OAAA;IAAKsC,SAAS,EAAC,WAAW;IAAAC,QAAA,GACrB7B,SAAS,iBACNV,OAAA;MAAKsC,SAAS,EAAC,OAAO;MAACE,IAAI,EAAC,OAAO;MAAAD,QAAA,EAAC;IAEpC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACR,eACD5C,OAAA;MAAM6C,QAAQ,EAAEtB,YAAa;MAACe,SAAS,EAAC,MAAM;MAAAC,QAAA,eAC1CvC,OAAA;QAAAuC,QAAA,eACIvC,OAAA;UAAAuC,QAAA,EAAQ;QAAkB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAC1C,EAAA,CAnEID,IAAI;AAAA6C,EAAA,GAAJ7C,IAAI;AAqEV,eAAeA,IAAI;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}