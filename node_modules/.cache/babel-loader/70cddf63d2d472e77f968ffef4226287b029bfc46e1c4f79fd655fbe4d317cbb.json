{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alfon\\\\OneDrive\\\\Documentos\\\\GitHub\\\\frontend\\\\src\\\\pages\\\\login\\\\login.jsx\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = () => {\n    // Aquí deberías hacer la lógica para verificar el usuario y contraseña\n    // Por ejemplo, podrías compararlos con valores guardados en localStorage\n    const storedUsername = localStorage.getItem('username');\n    const storedPassword = localStorage.getItem('password');\n    if (username === storedUsername && bcrypt.compareSync(password, storedPassword)) {\n      alert('Inicio de sesión exitoso');\n    } else {\n      alert('Usuario o contraseña incorrectos');\n    }\n  };\n  const handleSignup = () => {\n    // Aquí deberías hacer la lógica para guardar el nuevo usuario y contraseña\n    const hashedPassword = bcrypt.hashSync(password, 10); // 10 es el costo del hash, puedes ajustarlo según tus necesidades\n    localStorage.setItem('username', username);\n    localStorage.setItem('password', hashedPassword);\n    alert('Usuario registrado exitosamente');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Iniciar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Usuario\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Contrase\\xF1a\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Iniciar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignup,\n      children: \"Registrarse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","username","setUsername","password","setPassword","handleLogin","storedUsername","localStorage","getItem","storedPassword","bcrypt","compareSync","alert","handleSignup","hashedPassword","hashSync","setItem","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/alfon/OneDrive/Documentos/GitHub/frontend/src/pages/login/login.jsx"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\n\n\nconst App = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = () => {\n    // Aquí deberías hacer la lógica para verificar el usuario y contraseña\n    // Por ejemplo, podrías compararlos con valores guardados en localStorage\n    const storedUsername = localStorage.getItem('username');\n    const storedPassword = localStorage.getItem('password');\n\n    if (username === storedUsername && bcrypt.compareSync(password, storedPassword)) {\n      alert('Inicio de sesión exitoso');\n    } else {\n      alert('Usuario o contraseña incorrectos');\n    }\n  };\n\n  const handleSignup = () => {\n    // Aquí deberías hacer la lógica para guardar el nuevo usuario y contraseña\n    const hashedPassword = bcrypt.hashSync(password, 10); // 10 es el costo del hash, puedes ajustarlo según tus necesidades\n    localStorage.setItem('username', username);\n    localStorage.setItem('password', hashedPassword);\n    alert('Usuario registrado exitosamente');\n  };\n\n  return (\n    <div>\n      <h1>Iniciar Sesión</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Usuario\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Contraseña\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <button onClick={handleLogin}>Iniciar Sesión</button>\n      <button onClick={handleSignup}>Registrarse</button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA;IACA,MAAMC,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvD,MAAMC,cAAc,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAEvD,IAAIP,QAAQ,KAAKK,cAAc,IAAII,MAAM,CAACC,WAAW,CAACR,QAAQ,EAAEM,cAAc,CAAC,EAAE;MAC/EG,KAAK,CAAC,0BAA0B,CAAC;IACnC,CAAC,MAAM;MACLA,KAAK,CAAC,kCAAkC,CAAC;IAC3C;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,MAAMC,cAAc,GAAGJ,MAAM,CAACK,QAAQ,CAACZ,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;IACtDI,YAAY,CAACS,OAAO,CAAC,UAAU,EAAEf,QAAQ,CAAC;IAC1CM,YAAY,CAACS,OAAO,CAAC,UAAU,EAAEF,cAAc,CAAC;IAChDF,KAAK,CAAC,iCAAiC,CAAC;EAC1C,CAAC;EAED,oBACEd,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBvB,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,SAAS;MACrBC,KAAK,EAAEvB,QAAS;MAChBwB,QAAQ,EAAGC,CAAC,IAAKxB,WAAW,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFvB,OAAA;MACEwB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,eAAY;MACxBC,KAAK,EAAErB,QAAS;MAChBsB,QAAQ,EAAGC,CAAC,IAAKtB,WAAW,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFvB,OAAA;MAAQ8B,OAAO,EAAEvB,WAAY;MAAAY,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDvB,OAAA;MAAQ8B,OAAO,EAAEf,YAAa;MAAAI,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAACrB,EAAA,CA5CID,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA8CT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}