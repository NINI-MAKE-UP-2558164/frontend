{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\frontend\\\\src\\\\pages\\\\register\\\\Register.jsx\";\nimport React, { useState } from \"react\";\nimport \"./register.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  var _s = $RefreshSig$();\n  const RegisterForm = () => {\n    _s();\n    const [formData, setFormData] = useState({\n      nombre: \"\",\n      email: \"\",\n      apellidos: \"\",\n      pas\n    });\n    const handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    };\n    const handleSubmit = async event => {\n      event.preventDefault();\n      try {\n        const response = await axios.post(\"http://localhost:8000/api/Usuarios/\", formData);\n        console.log(\"Usuario registrado con éxito:\", response.data);\n        // Aquí puedes manejar la respuesta de la API, como redirigir al usuario a otra página\n      } catch (error) {\n        console.error(\"Error al registrar el usuario:\", error);\n        // Aquí puedes manejar errores, como mostrar un mensaje de error al usuario\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nombre de usuario:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: formData.username,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Correo electr\\xF3nico:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Contrase\\xF1a:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Registrarse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Llama al componente RegisterForm dentro del componente Register\n  _s(RegisterForm, \"BxXMGjGf+qWEbGoFyEq7BZBRVXA=\");\n  return /*#__PURE__*/_jsxDEV(RegisterForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n}\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Register","_s","$RefreshSig$","RegisterForm","formData","setFormData","nombre","email","apellidos","pas","handleChange","event","name","value","target","handleSubmit","preventDefault","response","post","console","log","data","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","username","onChange","password","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/frontend/src/pages/register/Register.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./register.css\";\r\nimport axios from \"axios\";\r\n\r\nfunction Register() {\r\n  const RegisterForm = () => {\r\n    const [formData, setFormData] = useState({\r\n      nombre: \"\",\r\n      email: \"\",\r\n      apellidos: \"\",\r\n      pas\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n      const { name, value } = event.target;\r\n      setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n      event.preventDefault();\r\n      try {\r\n        const response = await axios.post(\r\n          \"http://localhost:8000/api/Usuarios/\",\r\n          formData\r\n        );\r\n        console.log(\"Usuario registrado con éxito:\", response.data);\r\n        // Aquí puedes manejar la respuesta de la API, como redirigir al usuario a otra página\r\n      } catch (error) {\r\n        console.error(\"Error al registrar el usuario:\", error);\r\n        // Aquí puedes manejar errores, como mostrar un mensaje de error al usuario\r\n      }\r\n    };\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Nombre de usuario:</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={formData.username}\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <label>Correo electrónico:</label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <label>Contraseña:</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <button type=\"submit\">Registrarse</button>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  // Llama al componente RegisterForm dentro del componente Register\r\n  return <RegisterForm />;\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}